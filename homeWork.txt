1. Продумать, где можно применить замыкания для практикума из седьмого урока.

    - в реальной разработке замыкания смогут пригодиться в API-функциях для защиты ключей, т.к. замыкания позволяют запретить доступ извне к переменным и функциям.

2. Не выполняя код, ответить, что выведет браузер и почему:
    
    a. if (!( "a" in window )) {
        var a = 1 ;
        }
        alert(a);

    Ответ: undefined, но не понимаю почему!
                'a' in window в самом начале принимает значение false, соответственно !( 'a' in window ) будет true, значит мы должны зайти в условие if.
                Далее определяем переменную a = 1.
                Затем alert выводим?

    b. var b = function a(x) { 
            x && a(--x);
        };
        alert(a);

        Ответ: undefined, т.к. фактически мы функцию a не вызывали

    c. function a (x) {
            return x * 2 ;
        }
        var a;
        alert(a);

        Ответ: !!!

    d. function b (x, y, a) {
            arguments [ 2 ] = 10 ;
            alert(a);
        }
        b( 1 , 2 , 3 );

        Ответ: входящий параметр для a = 3, но в теле функции мы меняем [2] входящий параметр на 10, т.е. a = 10